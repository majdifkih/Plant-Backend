name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Déclenchement lors d'un push sur la branche principale
  pull_request:
    branches:
      - main  # Déclenchement lors de la création d'un pull request sur la branche principale

jobs:
  # Job de test
  test:
    runs-on: ubuntu-latest  # Utilisation d'un environnement Ubuntu
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Vérifier le code source

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2  # Installer Docker Buildx pour la création d'images

      - name: Build Docker image
        run: docker build -t plantz-app .  # Construire l'image Docker avec le Dockerfile

      - name: Run tests in Docker container
        run: |
          docker run --env-file .env plantz-app npm run test  # Exécuter les tests dans le conteneur Docker

  # Job de déploiement
  deploy:
    needs: test  # Ce job ne s'exécute que si le job de test réussit
    runs-on: ubuntu-latest  # Utilisation d'un environnement Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Vérifier le code source

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2  # Installer Docker Buildx pour la création d'images

      - name: Build Docker image
        run: docker build -t plantz-app .  # Construire l'image Docker avec le Dockerfile

      - name: Run Docker container
        run: |
          docker run -d -p 8080:8080 --env-file .env plantz-app  # Exécuter le conteneur Docker en arrière-plan

      - name: Install Ngrok
        run: |
          sudo apt-get install -y ngrok  # Installer Ngrok sur le runner GitHub Actions
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}  # Authentification avec votre token Ngrok

      - name: Expose the local server with Ngrok
        run: |
          ngrok http 8080 --log=stdout &  # Lancer Ngrok pour exposer votre application sur le port 8080

      - name: Get Ngrok URL
        id: ngrok-url
        run: |
          # Récupérer l'URL générée par Ngrok
          url=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "Ngrok URL: $url"
          echo "::set-output name=ngrok_url::$url"  # Stocke l'URL générée pour utilisation future

      - name: Display Ngrok URL
        run: echo "The public Ngrok URL is: ${{ steps.ngrok-url.outputs.ngrok_url }}"
