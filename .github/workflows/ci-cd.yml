name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Déclenchement lors d'un push sur la branche principale
  pull_request:
    branches:
      - main  # Déclenchement lors de la création d'un pull request sur la branche principale

jobs:
  # Job de test
  test:
    runs-on: ubuntu-latest  # Utilisation d'un environnement Ubuntu
    continue-on-error: true  # Ignore les erreurs de test et continue

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Vérifier le code source

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Vous pouvez spécifier votre version Node.js ici

      - name: Install dependencies
        run: npm install  # Installation des dépendances avec npm

      - name: Run tests
        run: npm run test  # Exécution des tests Jest

  # Job de déploiement
  deploy:
    needs: test  # Ce job se déclenche seulement après le job de test
    runs-on: ubuntu-latest  # Utilisation d'un environnement Ubuntu
    if: ${{ always() }}  # Le job se lance même si le job de test échoue

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Vérifier le code source

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Version de Node.js à utiliser

      - name: Install dependencies
        run: npm install  # Installation des dépendances avec npm

      - name: Start the server
        run: |
          nohup npm start &  # Démarre l'application en arrière-plan

      - name: Install Ngrok
        run: |
          sudo apt-get install -y ngrok  # Installer Ngrok sur le runner GitHub Actions
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}  # Authentification avec votre token Ngrok

      - name: Expose the local server with Ngrok
        run: |
          nohup ngrok http 8080 --log=stdout &  # Lancer Ngrok pour exposer l'application sur le port 8080

      - name: Get Ngrok URL
        id: ngrok-url
        run: |
          # Attendre quelques secondes pour que Ngrok ait généré l'URL
          sleep 5
          url=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "Ngrok URL: $url"
          echo "NGROK_URL=$url" >> $GITHUB_ENV  # Stocke l'URL générée pour l'utiliser dans les étapes suivantes

      - name: Display Ngrok URL
        run: |
          echo "The public Ngrok URL is: ${{ env.NGROK_URL }}"
