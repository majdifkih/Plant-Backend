name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job de test
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 0000
          POSTGRES_DB: plantZ
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Wait for PostgreSQL
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432; then
              echo "PostgreSQL is ready";
              break;
            fi
            echo "Waiting for PostgreSQL...";
            sleep 2;
          done

      - name: Set DATABASE_URL environment variable
        run: echo "DATABASE_URL=postgres://postgres:0000@localhost:5432/plantZ" >> $GITHUB_ENV

      - name: Run tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: npm run test

  # Job de dÃ©ploiement
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set DATABASE_URL environment variable
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

      - name: Start the server
        run: |
          nohup npm start &
